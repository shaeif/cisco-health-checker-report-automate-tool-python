- name: Read, Process, and Append Data to CSV
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Find all text files in the directory
      ansible.builtin.find:
        paths: input/
        patterns: "*.txt"
      register: found_files

    - name: Read and Decode Each File
      ansible.builtin.slurp:
        src: "{{ item.path }}"
      loop: "{{ found_files.files }}"
      register: file_contents

    - name: Process Each File and Store in a List
      ansible.builtin.set_fact:
       extracted_data: "{{ extracted_data | default([]) + [{
         'switch_model': switch_model,
         'board_id': board_id,
         'uptime_info': uptime_info,
         'hostname': hostname,
         'vlan_ip': vlan_ip,
         'switch_version': switch_version,
         'system_image': system_image,
         'cpu_util': cpu_util,
         'inventory_data': inventory_data,
         'cisco_info': cisco_info
        }] }}"
      loop: "{{ file_contents.results }}"
      vars:
        decoded_file: "{{ item.content | b64decode }}"
        switch_model: "{{ decoded_file | regex_search('(?<=cisco\\s)(WS-|CS-|CISCO\\s*)?[A-Z]{1,3}\\d{3,4}[A-Z]*[-\\dA-Z]+', multiline=True) | default('unknown') }}"
        board_id: "{{ decoded_file | regex_search('(?<=Processor board ID )\\S+') | default('unknown') }}"
        uptime_info: "{{ decoded_file | regex_search('(?m)^.*uptime.*$') | replace(',', ' ') | join('') }}"
        hostname: "{{ decoded_file | regex_search('(?m)^.*uptime.*$') | regex_search('^\\S+', '\\0') }}"
        vlan_ip: "{{ decoded_file | regex_search('^Vlan\\d{2,3}\\s+(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})', multiline=True) | default('unknown') }}"
        switch_version: "{{ decoded_file | regex_search('Cisco IOS Software.*', multiline=True) | regex_search('Version\\s+(\\d+\\.\\d+(\\(\\d+\\))?(\\.\\d+)?([A-Za-z]\\d*)?)', '\\1') | default('unknown') }}"
        system_image: "{{ decoded_file | regex_search('(?:flash|bootflash):([^\\s]+\\.bin)', '\\1') | default('unknown') }}"
        cpu_util: "{{ decoded_file | regex_findall('.*CPU\\s+utilization.*$', multiline=True) | join('\\n') }}"
        inventory_data: "{{ decoded_file | regex_findall('^.*(?:NAME|DESCR|PID|VID|SN).*', multiline=True) | select('search', '.*(?:NAME|DESCR|PID|VID|SN).*.*(?:NAME|DESCR|PID|VID|SN).*') | join(' \n ') | replace(',', ' ') | string}}"
        cisco_info: "{{ decoded_file | regex_search('(?i)^cisco\\s(?:WS-|CS-|CISCO\\s*)?[A-Z]{1,3}\\d{3,4}[A-Z]*[-\\dA-Z]*.*(?:\\n(?!\\s*$).*)*', multiline=True) | default('unknown') }}"
    
    - name: Append extracted data to Excel file
      ejfattouch.excel.write_sheet:
        path: ./output/PMC.xlsx
        sheet: "worksheet"
        data: >-
          {{  item.0+1  }},{{ '' }},{{ item.1.switch_model | join('') }},{{ item.1.hostname | join('') }},{{ item.1.vlan_ip }},{{ "UP" }},{{ item.1.switch_version }},{{ '' }},
          {{ item.1.system_image | join('')  }},{{''}},{{ item.1.board_id }},{{ item.1.uptime_info }},
          {{ item.1.cpu_util }},{{ item.1.inventory_data }},{{ item.1.cisco_info }}
        cell: "A{{ 2 + item.0 }}" 
        override: True
      with_indexed_items: "{{ extracted_data }}"
